(function(){var require,define;(function(){var modules={};function build(module){var factory=module.factory;module.exports={};delete module.factory;factory(require,module.exports,module);return module.exports;}require=function(id){if(!modules[id]){throw"module "+id+" not found";}return modules[id].factory?build(modules[id]):modules[id].exports;};define=function(id,factory){if(modules[id]){throw"module "+id+" already defined";}modules[id]={id:id,factory:factory};};define.remove=function(id){delete modules[id];};})();if(typeof module==="object"&&typeof require==="function"){module.exports.require=require;module.exports.define=define;}define("cordova",function(require,exports,module){var channel=require("cordova/channel");document.addEventListener("DOMContentLoaded",function(){channel.onDOMContentLoaded.fire();},false);if(document.readyState=="complete"||document.readyState=="interactive"){channel.onDOMContentLoaded.fire();}var m_document_addEventListener=document.addEventListener;var m_document_removeEventListener=document.removeEventListener;var m_window_addEventListener=window.addEventListener;var m_window_removeEventListener=window.removeEventListener;var documentEventHandlers={},windowEventHandlers={};document.addEventListener=function(evt,handler,capture){var e=evt.toLowerCase();if(typeof documentEventHandlers[e]!="undefined"){if(evt==="deviceready"){documentEventHandlers[e].subscribeOnce(handler);}else{documentEventHandlers[e].subscribe(handler);}}else{m_document_addEventListener.call(document,evt,handler,capture);}};window.addEventListener=function(evt,handler,capture){var e=evt.toLowerCase();if(typeof windowEventHandlers[e]!="undefined"){windowEventHandlers[e].subscribe(handler);}else{m_window_addEventListener.call(window,evt,handler,capture);}};document.removeEventListener=function(evt,handler,capture){var e=evt.toLowerCase();if(typeof documentEventHandlers[e]!="undefined"){documentEventHandlers[e].unsubscribe(handler);}else{m_document_removeEventListener.call(document,evt,handler,capture);}};window.removeEventListener=function(evt,handler,capture){var e=evt.toLowerCase();if(typeof windowEventHandlers[e]!="undefined"){windowEventHandlers[e].unsubscribe(handler);}else{m_window_removeEventListener.call(window,evt,handler,capture);}};function createEvent(type,data){var event=document.createEvent("Events");event.initEvent(type,false,false);if(data){for(var i in data){if(data.hasOwnProperty(i)){event[i]=data[i];}}}return event;}if(typeof window.console==="undefined"){window.console={log:function(){}};}var cordova={define:define,require:require,addWindowEventHandler:function(event,opts){return(windowEventHandlers[event]=channel.create(event,opts));},addDocumentEventHandler:function(event,opts){return(documentEventHandlers[event]=channel.create(event,opts));},removeWindowEventHandler:function(event){delete windowEventHandlers[event];},removeDocumentEventHandler:function(event){delete documentEventHandlers[event];},getOriginalHandlers:function(){return{document:{addEventListener:m_document_addEventListener,removeEventListener:m_document_removeEventListener},window:{addEventListener:m_window_addEventListener,removeEventListener:m_window_removeEventListener}};},fireDocumentEvent:function(type,data){var evt=createEvent(type,data);if(typeof documentEventHandlers[type]!="undefined"){setTimeout(function(){documentEventHandlers[type].fire(evt);},0);}else{document.dispatchEvent(evt);}},fireWindowEvent:function(type,data){var evt=createEvent(type,data);if(typeof windowEventHandlers[type]!="undefined"){setTimeout(function(){windowEventHandlers[type].fire(evt);},0);}else{window.dispatchEvent(evt);}},shuttingDown:false,UsePolling:false,commandQueue:[],commandQueueFlushing:false,callbackId:0,callbacks:{},callbackStatus:{NO_RESULT:0,OK:1,CLASS_NOT_FOUND_EXCEPTION:2,ILLEGAL_ACCESS_EXCEPTION:3,INSTANTIATION_EXCEPTION:4,MALFORMED_URL_EXCEPTION:5,IO_EXCEPTION:6,INVALID_ACTION:7,JSON_EXCEPTION:8,ERROR:9},callbackSuccess:function(callbackId,args){if(cordova.callbacks[callbackId]){if(args.status==cordova.callbackStatus.OK){try{if(cordova.callbacks[callbackId].success){cordova.callbacks[callbackId].success(args.message);}}catch(e){console.log("Error in success callback: "+callbackId+" = "+e);}}if(!args.keepCallback){delete cordova.callbacks[callbackId];}}},callbackError:function(callbackId,args){if(cordova.callbacks[callbackId]){try{if(cordova.callbacks[callbackId].fail){cordova.callbacks[callbackId].fail(args.message);}}catch(e){console.log("Error in error callback: "+callbackId+" = "+e);}if(!args.keepCallback){delete cordova.callbacks[callbackId];}}},addConstructor:function(func){channel.onCordovaReady.subscribeOnce(function(){try{func();}catch(e){console.log("Failed to run constructor: "+e);}});}};channel.onPause=cordova.addDocumentEventHandler("pause");channel.onResume=cordova.addDocumentEventHandler("resume");channel.onDeviceReady=cordova.addDocumentEventHandler("deviceready");module.exports=cordova;});define("cordova/builder",function(require,exports,module){var utils=require("cordova/utils");function each(objects,func,context){for(var prop in objects){if(objects.hasOwnProperty(prop)){func.apply(context,[objects[prop],prop]);}}}function include(parent,objects,clobber,merge){each(objects,function(obj,key){try{var result=obj.path?require(obj.path):{};if(clobber){if(typeof parent[key]==="undefined"){parent[key]=result;}else{if(typeof obj.path!=="undefined"){if(merge){recursiveMerge(parent[key],result);}else{parent[key]=result;}}}result=parent[key];}else{if(typeof parent[key]=="undefined"){parent[key]=result;}else{if(merge&&typeof obj.path!=="undefined"){recursiveMerge(result,parent[key]);parent[key]=result;}else{result=parent[key];}}}if(obj.children){include(result,obj.children,clobber,merge);}}catch(e){utils.alert("Exception building cordova JS globals: "+e+' for key "'+key+'"');}});}function recursiveMerge(target,src){for(var prop in src){if(src.hasOwnProperty(prop)){if(typeof target.prototype!=="undefined"&&target.prototype.constructor===target){target.prototype[prop]=src[prop];}else{target[prop]=typeof src[prop]==="object"?recursiveMerge(target[prop],src[prop]):src[prop];}}}return target;}module.exports={build:function(objects){return{intoButDontClobber:function(target){include(target,objects,false,false);},intoAndClobber:function(target){include(target,objects,true,false);},intoAndMerge:function(target){include(target,objects,true,true);}};}};});define("cordova/channel",function(require,exports,module){var utils=require("cordova/utils");var Channel=function(type,opts){this.type=type;this.handlers={};this.numHandlers=0;this.guid=1;this.fired=false;this.enabled=true;this.events={onSubscribe:null,onUnsubscribe:null};if(opts){if(opts.onSubscribe){this.events.onSubscribe=opts.onSubscribe;}if(opts.onUnsubscribe){this.events.onUnsubscribe=opts.onUnsubscribe;}}},channel={join:function(h,c){var i=c.length;var len=i;var f=function(){if(!(--i)){h();}};for(var j=0;j<len;j++){!c[j].fired?c[j].subscribeOnce(f):i--;}if(!i){h();}},create:function(type,opts){channel[type]=new Channel(type,opts);return channel[type];},deviceReadyChannelsArray:[],deviceReadyChannelsMap:{},waitForInitialization:function(feature){if(feature){var c=null;if(this[feature]){c=this[feature];}else{c=this.create(feature);}this.deviceReadyChannelsMap[feature]=c;this.deviceReadyChannelsArray.push(c);}},initializationComplete:function(feature){var c=this.deviceReadyChannelsMap[feature];if(c){c.fire();}}};function forceFunction(f){if(f===null||f===undefined||typeof f!="function"){throw"Function required as first argument!";}}Channel.prototype.subscribe=function(f,c,g){forceFunction(f);var func=f;if(typeof c=="object"){func=utils.close(c,f);}g=g||func.observer_guid||f.observer_guid;if(!g){g=this.guid++;}else{return g;}func.observer_guid=g;f.observer_guid=g;this.handlers[g]=func;this.numHandlers++;if(this.events.onSubscribe){this.events.onSubscribe.call(this);}if(this.fired){func.call(this);}return g;};Channel.prototype.subscribeOnce=function(f,c){forceFunction(f);var g=null;var _this=this;var m=function(){f.apply(c||null,arguments);_this.unsubscribe(g);};if(this.fired){if(typeof c=="object"){f=utils.close(c,f);}f.apply(this,this.fireArgs);}else{g=this.subscribe(m);}return g;};Channel.prototype.unsubscribe=function(g){if(g===null||g===undefined){throw"You must pass _something_ into Channel.unsubscribe";}if(typeof g=="function"){g=g.observer_guid;}var handler=this.handlers[g];if(handler){if(handler.observer_guid){handler.observer_guid=null;}this.handlers[g]=null;delete this.handlers[g];this.numHandlers--;if(this.events.onUnsubscribe){this.events.onUnsubscribe.call(this);}}};Channel.prototype.fire=function(e){if(this.enabled){var fail=false;this.fired=true;for(var item in this.handlers){var handler=this.handlers[item];if(typeof handler=="function"){var rv=(handler.apply(this,arguments)===false);fail=fail||rv;}}this.fireArgs=arguments;return !fail;}return true;};channel.create("onDOMContentLoaded");channel.create("onNativeReady");channel.create("onCordovaReady");channel.create("onCordovaInfoReady");channel.create("onDeviceReady");channel.create("onResume");channel.create("onPause");channel.create("onDestroy");channel.waitForInitialization("onCordovaReady");channel.waitForInitialization("onCordovaConnectionReady");module.exports=channel;});define("cordova/common",function(require,exports,module){module.exports={objects:{cordova:{path:"cordova",children:{exec:{path:"cordova/exec"},logger:{path:"cordova/plugin/logger"}}},Cordova:{children:{exec:{path:"cordova/exec"}}},PhoneGap:{children:{exec:{path:"cordova/exec"}}},navigator:{children:{gamehall:{path:"cordova/plugin/gamehall"},}},}};});define("cordova/exec",function(require,exports,module){var cordova=require("cordova");module.exports=function(success,fail,service,action,args){try{var callbackId=service+cordova.callbackId++;console.log("action="+action+";Error in success callback: "+callbackId);if(success||fail){cordova.callbacks[callbackId]={success:success,fail:fail};}var r=prompt(JSON.stringify(args),"gap:"+JSON.stringify([service,action,callbackId,true]));if(r.length>0){var v=JSON.parse(r);if(v.status===cordova.callbackStatus.OK){if(success){try{success(v.message);}catch(e){console.log("Error in success callback: "+callbackId+" = "+e);}if(!v.keepCallback){delete cordova.callbacks[callbackId];}}return v.message;}else{if(v.status===cordova.callbackStatus.NO_RESULT){if(!v.keepCallback){delete cordova.callbacks[callbackId];}}else{console.log("Error: Status="+v.status+" Message="+v.message);if(fail){try{fail(v.message);}catch(e1){console.log("Error in error callback: "+callbackId+" = "+e1);}if(!v.keepCallback){delete cordova.callbacks[callbackId];}}return null;}}}}catch(e2){console.log("Error: "+e2);}};});define("cordova/platform",function(require,exports,module){module.exports={id:"android",initialize:function(){var channel=require("cordova/channel"),cordova=require("cordova"),callback=require("cordova/plugin/android/callback"),polling=require("cordova/plugin/android/polling"),exec=require("cordova/exec");channel.onDestroy.subscribe(function(){cordova.shuttingDown=true;});setTimeout(function(){if(cordova.UsePolling){polling();}else{var isPolling=prompt("usePolling","gap_callbackServer:");cordova.UsePolling=isPolling;if(isPolling=="true"){cordova.UsePolling=true;polling();}else{cordova.UsePolling=false;callback();}}},1);var backButtonChannel=cordova.addDocumentEventHandler("backbutton",{onSubscribe:function(){if(this.numHandlers===1){exec(null,null,"App","overrideBackbutton",[true]);}},onUnsubscribe:function(){if(this.numHandlers===0){exec(null,null,"App","overrideBackbutton",[false]);}}});cordova.addDocumentEventHandler("menubutton");cordova.addDocumentEventHandler("searchbutton");var storage=require("cordova/plugin/android/storage");if(typeof window.openDatabase=="undefined"){window.openDatabase=storage.openDatabase;}else{var originalOpenDatabase=window.openDatabase;window.openDatabase=function(name,version,desc,size){var db=null;try{db=originalOpenDatabase(name,version,desc,size);}catch(ex){if(ex.code===18){db=null;}else{throw ex;}}if(db===null){return storage.openDatabase(name,version,desc,size);}else{return db;}};}if(typeof window.localStorage=="undefined"||window.localStorage===null){window.localStorage=new storage.CupcakeLocalStorage();}channel.join(function(){exec(null,null,"App","show",[]);},[channel.onCordovaReady]);},objects:{cordova:{children:{JSCallback:{path:"cordova/plugin/android/callback"},JSCallbackPolling:{path:"cordova/plugin/android/polling"}}},navigator:{children:{app:{path:"cordova/plugin/android/app"}}},},merges:{}};});define("cordova/plugin/android/app",function(require,exports,module){var exec=require("cordova/exec");module.exports={clearCache:function(){exec(null,null,"App","clearCache",[]);},loadUrl:function(url,props){exec(null,null,"App","loadUrl",[url,props]);},cancelLoadUrl:function(){exec(null,null,"App","cancelLoadUrl",[]);},clearHistory:function(){exec(null,null,"App","clearHistory",[]);},backHistory:function(){exec(null,null,"App","backHistory",[]);},overrideBackbutton:function(override){exec(null,null,"App","overrideBackbutton",[override]);},exitApp:function(){return exec(null,null,"App","exitApp",[]);}};});define("cordova/plugin/android/callback",function(require,exports,module){var port=null,token=null,cordova=require("cordova"),polling=require("cordova/plugin/android/polling"),callback=function(){if(cordova.shuttingDown){return;}if(cordova.UsePolling){polling();return;}var xmlhttp=new XMLHttpRequest();xmlhttp.onreadystatechange=function(){if(xmlhttp.readyState===4){if(cordova.shuttingDown){return;}if(xmlhttp.status===200){var msg=decodeURIComponent(xmlhttp.responseText);setTimeout(function(){try{var t=eval(msg);}catch(e){console.log("JSCallback: Message from Server: "+msg);console.log("JSCallback Error: "+e);}},1);setTimeout(callback,1);}else{if(xmlhttp.status===404){setTimeout(callback,10);}else{if(xmlhttp.status===403){console.log("JSCallback Error: Invalid token.  Stopping callbacks.");}else{if(xmlhttp.status===503){console.log("JSCallback Server Closed: Stopping callbacks.");}else{if(xmlhttp.status===400){console.log("JSCallback Error: Bad request.  Stopping callbacks.");}else{console.log("JSCallback Error: Request failed.");cordova.UsePolling=true;polling();}}}}}}};if(port===null){port=prompt("getPort","gap_callbackServer:");}if(token===null){token=prompt("getToken","gap_callbackServer:");}xmlhttp.open("GET","http://127.0.0.1:"+port+"/"+token,true);xmlhttp.send();};module.exports=callback;});define("cordova/plugin/android/polling",function(require,exports,module){var cordova=require("cordova"),period=50,polling=function(){if(cordova.shuttingDown){return;}if(!cordova.UsePolling){require("cordova/plugin/android/callback")();return;}var msg=prompt("","gap_poll:");if(msg){setTimeout(function(){try{var t=eval(""+msg);}catch(e){console.log("JSCallbackPolling: Message from Server: "+msg);console.log("JSCallbackPolling Error: "+e);}},1);setTimeout(polling,1);}else{setTimeout(polling,period);}};module.exports=polling;});define("cordova/plugin/android/storage",function(require,exports,module){var utils=require("cordova/utils"),exec=require("cordova/exec"),channel=require("cordova/channel");var queryQueue={};var DroidDB_Rows=function(){this.resultSet=[];this.length=0;};DroidDB_Rows.prototype.item=function(row){return this.resultSet[row];};var DroidDB_Result=function(){this.rows=new DroidDB_Rows();};function completeQuery(id,data){var query=queryQueue[id];if(query){try{delete queryQueue[id];var tx=query.tx;if(tx&&tx.queryList[id]){var r=new DroidDB_Result();r.rows.resultSet=data;r.rows.length=data.length;try{if(typeof query.successCallback==="function"){query.successCallback(query.tx,r);}}catch(ex){console.log("executeSql error calling user success callback: "+ex);}tx.queryComplete(id);}}catch(e){console.log("executeSql error: "+e);}}}function failQuery(reason,id){var query=queryQueue[id];if(query){try{delete queryQueue[id];var tx=query.tx;if(tx&&tx.queryList[id]){tx.queryList={};try{if(typeof query.errorCallback==="function"){query.errorCallback(query.tx,reason);}}catch(ex){console.log("executeSql error calling user error callback: "+ex);}tx.queryFailed(id,reason);}}catch(e){console.log("executeSql error: "+e);}}}var DroidDB_Query=function(tx){this.id=utils.createUUID();queryQueue[this.id]=this;this.resultSet=[];this.tx=tx;this.tx.queryList[this.id]=this;this.successCallback=null;this.errorCallback=null;};var DroidDB_Tx=function(){this.id=utils.createUUID();this.successCallback=null;this.errorCallback=null;this.queryList={};};DroidDB_Tx.prototype.queryComplete=function(id){delete this.queryList[id];if(this.successCallback){var count=0;var i;for(i in this.queryList){if(this.queryList.hasOwnProperty(i)){count++;}}if(count===0){try{this.successCallback();}catch(e){console.log("Transaction error calling user success callback: "+e);}}}};DroidDB_Tx.prototype.queryFailed=function(id,reason){this.queryList={};if(this.errorCallback){try{this.errorCallback(reason);}catch(e){console.log("Transaction error calling user error callback: "+e);}}};DroidDB_Tx.prototype.executeSql=function(sql,params,successCallback,errorCallback){if(typeof params==="undefined"){params=[];}var query=new DroidDB_Query(this);queryQueue[query.id]=query;query.successCallback=successCallback;query.errorCallback=errorCallback;exec(null,null,"Storage","executeSql",[sql,params,query.id]);};var DatabaseShell=function(){};DatabaseShell.prototype.transaction=function(process,errorCallback,successCallback){var tx=new DroidDB_Tx();tx.successCallback=successCallback;tx.errorCallback=errorCallback;try{process(tx);}catch(e){console.log("Transaction error: "+e);if(tx.errorCallback){try{tx.errorCallback(e);}catch(ex){console.log("Transaction error calling user error callback: "+e);}}}};var DroidDB_openDatabase=function(name,version,display_name,size){exec(null,null,"Storage","openDatabase",[name,version,display_name,size]);var db=new DatabaseShell();return db;};var CupcakeLocalStorage=function(){channel.waitForInitialization("cupcakeStorage");try{this.db=openDatabase("localStorage","1.0","localStorage",2621440);var storage={};this.length=0;function setLength(length){this.length=length;localStorage.length=length;}this.db.transaction(function(transaction){var i;transaction.executeSql("CREATE TABLE IF NOT EXISTS storage (id NVARCHAR(40) PRIMARY KEY, body NVARCHAR(255))");transaction.executeSql("SELECT * FROM storage",[],function(tx,result){for(var i=0;i<result.rows.length;i++){storage[result.rows.item(i).id]=result.rows.item(i).body;}setLength(result.rows.length);channel.initializationComplete("cupcakeStorage");});},function(err){utils.alert(err.message);});this.setItem=function(key,val){if(typeof(storage[key])=="undefined"){this.length++;}storage[key]=val;this.db.transaction(function(transaction){transaction.executeSql("CREATE TABLE IF NOT EXISTS storage (id NVARCHAR(40) PRIMARY KEY, body NVARCHAR(255))");transaction.executeSql("REPLACE INTO storage (id, body) values(?,?)",[key,val]);});};this.getItem=function(key){return storage[key];};this.removeItem=function(key){delete storage[key];this.length--;this.db.transaction(function(transaction){transaction.executeSql("CREATE TABLE IF NOT EXISTS storage (id NVARCHAR(40) PRIMARY KEY, body NVARCHAR(255))");transaction.executeSql("DELETE FROM storage where id=?",[key]);});};this.clear=function(){storage={};this.length=0;this.db.transaction(function(transaction){transaction.executeSql("CREATE TABLE IF NOT EXISTS storage (id NVARCHAR(40) PRIMARY KEY, body NVARCHAR(255))");transaction.executeSql("DELETE FROM storage",[]);});};this.key=function(index){var i=0;for(var j in storage){if(i==index){return j;}else{i++;}}return null;};}catch(e){utils.alert("Database error "+e+".");return;}};module.exports={openDatabase:DroidDB_openDatabase,CupcakeLocalStorage:CupcakeLocalStorage,failQuery:failQuery,completeQuery:completeQuery};});define("cordova/plugin/console-via-logger",function(require,exports,module){var logger=require("cordova/plugin/logger");var utils=require("cordova/utils");var console=module.exports;var WinConsole=window.console;var UseLogger=false;var Timers={};function noop(){}console.useLogger=function(value){if(arguments.length){UseLogger=!!value;}if(UseLogger){if(logger.useConsole()){throw new Error("console and logger are too intertwingly");}}return UseLogger;};console.log=function(){if(logger.useConsole()){return;}logger.log.apply(logger,[].slice.call(arguments));};console.error=function(){if(logger.useConsole()){return;}logger.error.apply(logger,[].slice.call(arguments));};console.warn=function(){if(logger.useConsole()){return;}logger.warn.apply(logger,[].slice.call(arguments));};console.info=function(){if(logger.useConsole()){return;}logger.info.apply(logger,[].slice.call(arguments));};console.debug=function(){if(logger.useConsole()){return;}logger.debug.apply(logger,[].slice.call(arguments));};console.assert=function(expression){if(expression){return;}var message=utils.vformat(arguments[1],[].slice.call(arguments,2));console.log("ASSERT: "+message);};console.clear=function(){};console.dir=function(object){console.log("%o",object);};console.dirxml=function(node){console.log(node.innerHTML);};console.trace=noop;console.group=console.log;console.groupCollapsed=console.log;console.groupEnd=noop;console.time=function(name){Timers[name]=new Date().valueOf();};console.timeEnd=function(name){var timeStart=Timers[name];if(!timeStart){console.warn("unknown timer: "+name);return;}var timeElapsed=new Date().valueOf()-timeStart;console.log(name+": "+timeElapsed+"ms");};console.timeStamp=noop;console.profile=noop;console.profileEnd=noop;console.count=noop;console.exception=console.log;console.table=function(data,columns){console.log("%o",data);};function wrapperedOrigCall(orgFunc,newFunc){return function(){var args=[].slice.call(arguments);try{orgFunc.apply(WinConsole,args);}catch(e){}try{newFunc.apply(console,args);}catch(e){}};}for(var key in console){if(typeof WinConsole[key]=="function"){console[key]=wrapperedOrigCall(WinConsole[key],console[key]);}}});define("cordova/plugin/logger",function(require,exports,module){var logger=exports;var exec=require("cordova/exec");var utils=require("cordova/utils");var UseConsole=true;var Queued=[];var DeviceReady=false;var CurrentLevel;var Levels=["LOG","ERROR","WARN","INFO","DEBUG"];var LevelsMap={};for(var i=0;i<Levels.length;i++){var level=Levels[i];LevelsMap[level]=i;logger[level]=level;}CurrentLevel=LevelsMap.WARN;logger.level=function(value){if(arguments.length){if(LevelsMap[value]===null){throw new Error("invalid logging level: "+value);}CurrentLevel=LevelsMap[value];}return Levels[CurrentLevel];};logger.useConsole=function(value){if(arguments.length){UseConsole=!!value;}if(UseConsole){if(typeof console=="undefined"){throw new Error("global console object is not defined");}if(typeof console.log!="function"){throw new Error("global console object does not have a log function");}if(typeof console.useLogger=="function"){if(console.useLogger()){throw new Error("console and logger are too intertwingly");}}}return UseConsole;};logger.log=function(message){logWithArgs("LOG",arguments);};logger.error=function(message){logWithArgs("ERROR",arguments);};logger.warn=function(message){logWithArgs("WARN",arguments);};logger.info=function(message){logWithArgs("INFO",arguments);};logger.debug=function(message){logWithArgs("DEBUG",arguments);};function logWithArgs(level,args){args=[level].concat([].slice.call(args));logger.logLevel.apply(logger,args);}logger.logLevel=function(level,message){var formatArgs=[].slice.call(arguments,2);message=utils.vformat(message,formatArgs);if(LevelsMap[level]===null){throw new Error("invalid logging level: "+level);}if(LevelsMap[level]>CurrentLevel){return;}if(!DeviceReady&&!UseConsole){Queued.push([level,message]);return;}if(!UseConsole){exec(null,null,"Logger","logLevel",[level,message]);return;}if(console.__usingCordovaLogger){throw new Error("console and logger are too intertwingly");}switch(level){case logger.LOG:console.log(message);break;case logger.ERROR:console.log("ERROR: "+message);break;case logger.WARN:console.log("WARN: "+message);break;case logger.INFO:console.log("INFO: "+message);break;case logger.DEBUG:console.log("DEBUG: "+message);break;}};logger.__onDeviceReady=function(){if(DeviceReady){return;}DeviceReady=true;for(var i=0;i<Queued.length;i++){var messageArgs=Queued[i];logger.logLevel(messageArgs[0],messageArgs[1]);}Queued=null;};document.addEventListener("deviceready",logger.__onDeviceReady,false);});define("cordova/plugin/gamehall",function(require,exports,module){var exec=require("cordova/exec");module.exports={startlistactivity:function(successCallback,errorCallback,options){var title=null;if(options&&typeof options.title=="string"){title=options.title;}var url=null;if(options&&typeof options.url=="string"){url=options.url;}exec(successCallback,errorCallback,"GNGameHallPlugin","startlistactivity",[title,url]);},startdetailsactivity:function(successCallback,errorCallback,options){var title=null;if(options&&typeof options.title=="string"){title=options.title;}var url=null;if(options&&typeof options.url=="string"){url=options.url;}var gameid=null;if(options&&typeof options.gameid=="string"){gameid=options.gameid;}var downurl=null;if(options&&typeof options.downurl=="string"){downurl=options.downurl;}var packagename=null;if(options&&typeof options.packagename=="string"){packagename=options.packagename;}var filesize=null;if(options&&typeof options.filesize=="string"){filesize=options.filesize;}var sdkinfo=null;if(options&&typeof options.sdkinfo=="string"){sdkinfo=options.sdkinfo;}var resolution=null;if(options&&typeof options.resolution=="string"){resolution=options.resolution;}exec(successCallback,errorCallback,"GNGameHallPlugin","startdetailsactivity",[title,url,gameid,downurl,packagename,filesize,sdkinfo,resolution]);},startimagescanactivity:function(successCallback,errorCallback,options){var url=null;if(options&&typeof options.url=="string"){url=options.url;}exec(successCallback,errorCallback,"GNGameHallPlugin","startimagescanactivity",[url]);}};});define("cordova/utils",function(require,exports,module){var utils=exports;utils.isArray=function(a){return Object.prototype.toString.call(a)=="[object Array]";};utils.isDate=function(d){return Object.prototype.toString.call(d)=="[object Date]";};utils.clone=function(obj){if(!obj||typeof obj=="function"||utils.isDate(obj)||typeof obj!="object"){return obj;}var retVal,i;if(utils.isArray(obj)){retVal=[];for(i=0;i<obj.length;++i){retVal.push(utils.clone(obj[i]));}return retVal;}retVal={};for(i in obj){if(!(i in retVal)||retVal[i]!=obj[i]){retVal[i]=utils.clone(obj[i]);}}return retVal;};utils.close=function(context,func,params){if(typeof params=="undefined"){return function(){return func.apply(context,arguments);};}else{return function(){return func.apply(context,params);};}};utils.createUUID=function(){return UUIDcreatePart(4)+"-"+UUIDcreatePart(2)+"-"+UUIDcreatePart(2)+"-"+UUIDcreatePart(2)+"-"+UUIDcreatePart(6);};utils.extend=(function(){var F=function(){};return function(Child,Parent){F.prototype=Parent.prototype;Child.prototype=new F();Child.__super__=Parent.prototype;Child.prototype.constructor=Child;};}());utils.alert=function(msg){if(alert){alert(msg);}else{if(console&&console.log){console.log(msg);}}};utils.format=function(formatString){var args=[].slice.call(arguments,1);return utils.vformat(formatString,args);};utils.vformat=function(formatString,args){if(formatString===null||formatString===undefined){return"";}if(arguments.length==1){return formatString.toString();}if(typeof formatString!="string"){return formatString.toString();}var pattern=/(.*?)%(.)(.*)/;var rest=formatString;var result=[];while(args.length){var arg=args.shift();var match=pattern.exec(rest);if(!match){break;}rest=match[3];result.push(match[1]);if(match[2]=="%"){result.push("%");args.unshift(arg);continue;}result.push(formatted(arg,match[2]));}result.push(rest);return result.join("");};function UUIDcreatePart(length){var uuidpart="";for(var i=0;i<length;i++){var uuidchar=parseInt((Math.random()*256),10).toString(16);if(uuidchar.length==1){uuidchar="0"+uuidchar;}uuidpart+=uuidchar;}return uuidpart;}function formatted(object,formatChar){try{switch(formatChar){case"j":case"o":return JSON.stringify(object);case"c":return"";}}catch(e){return"error JSON.stringify()ing argument: "+e;}if((object===null)||(object===undefined)){return Object.prototype.toString.call(object);}return object.toString();}});window.cordova=require("cordova");(function(context){var channel=require("cordova/channel"),_self={boot:function(){channel.join(function(){var builder=require("cordova/builder"),base=require("cordova/common"),platform=require("cordova/platform");builder.build(base.objects).intoButDontClobber(window);builder.build(platform.objects).intoAndClobber(window);if(typeof platform.merges!=="undefined"){builder.build(platform.merges).intoAndMerge(window);}platform.initialize();channel.onCordovaReady.fire();channel.join(function(){require("cordova").fireDocumentEvent("deviceready");},channel.deviceReadyChannelsArray);},[channel.onDOMContentLoaded,channel.onNativeReady]);}};channel.onNativeReady.subscribeOnce(_self.boot);if(window._nativeReady){channel.onNativeReady.fire();}}(window));})();